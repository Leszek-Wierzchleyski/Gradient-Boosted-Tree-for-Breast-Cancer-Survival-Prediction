#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Oct  7 04:26:08 2024

@author: leszekwierzchleyski
"""
""""This script runs Bayesian Optimisation for the histogram based gradient 
boosted tree model
Many thanks to Cancer Research UK, the British Columbia Cancer Foundation and 
Canadian Breast Cancer Foundation
"""
import xgboost as xg
import numpy as np
from sklearn.metrics import accuracy_score
import pandas as pd
from sklearn import model_selection
from skopt import BayesSearchCV
File = 'METABRIC_RNA_Mutation.csv'
Dataset = pd.read_csv(File)

""""Prepare Labels"""    
label_list = []
 
for i in range(len(Dataset)):
    if Dataset.iloc[:,30][i] == "Died of Disease":
        label = 1
    else:
        label = 0
    label_list.append(label)
y_train = label_list

File2 = 'Encoded_METABRIC.csv'
Dataset2 = pd.read_csv(File2)
print(Dataset2.head())

x_train, x_test, y_train, y_test= model_selection.train_test_split(Dataset2, y_train, test_size=0.2, random_state=1)

dtrain = xg.DMatrix(x_train, label=y_train, enable_categorical=True)
dtest = xg.DMatrix(x_test, enable_categorical=True)

""""Parameter Space"""

param_space = {
 'learning_rate': (0.1, 1.0, 'log-uniform'),
 'max_depth': [5,10,15,20],

 'n_estimators': (50, 100)

}

"""Run Bayesian Optimiser"""

optimizer = BayesSearchCV(
  estimator=xg.XGBClassifier(n_jobs=1),
 search_spaces=param_space,
 scoring='accuracy',
 cv=5,
 n_iter=200,
)
optimizer.fit(x_train, y_train)
best_params = optimizer.best_params_
best_score = optimizer.best_score_
print(f"Best parameters: {best_params}")
print(f"Best rmse: {best_score}")
